apply plugin: 'kotlin-platform-js'
apply plugin: 'com.moowork.node'

archivesBaseName = 'vic-c137-boids-common-js'

dependencies {
    expectedBy project(":common")
    implementation dep.kotlin_stdlib_js
    testCompile dep.kotlin_test_js
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

[compileKotlin2Js, compileTestKotlin2Js]*.configure {
    kotlinOptions.moduleKind = "umd"
    kotlinOptions.sourceMap = true
    kotlinOptions.sourceMapEmbedSources = "always"
}

task populateNodeModules(type: Copy, dependsOn: compileKotlin2Js) {
    from compileKotlin2Js.destinationDir

    configurations.testCompile.each {
        from zipTree(it.absolutePath).matching { include '*.js' }
    }

    into "${buildDir}/node_modules"
}

node {
    version = node_version
    download = true
}

task installQunit(type: NpmTask) {
    inputs.property('qunitVersion', qunitVersion)
    outputs.dir file('node_modules/qunit')

    args = ['install', "qunit@${qunitVersion}"]
}

task runQunit(type: NodeTask, dependsOn: [compileTestKotlin2Js, populateNodeModules, installQunit]) {
    script = file('node_modules/qunit/bin/qunit')
    args = [projectDir.toPath().relativize(file(compileTestKotlin2Js.outputFile).toPath())]
}

test.dependsOn runQunit

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.kotlin
}

artifacts {
    archives sourcesJar
}